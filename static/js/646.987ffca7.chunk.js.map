{"version":3,"file":"static/js/646.987ffca7.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Users/Users.module.css?b9d0","webpack://my-app/./src/components/Users/Paginator/Paginator.module.css?4e37","components/Users/Paginator/usePagination.ts","components/Users/Paginator/Paginator.tsx","webpack://my-app/./src/components/Users/User/User.module.css?cfea","components/Users/User/User.tsx","components/Users/Users.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/usersSelectors.ts","components/Users/UsersContainer.tsx","hoc/withAuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"paginator\":\"Users_paginator__CSGGN\"};","// extracted by mini-css-extract-plugin\nexport default {\"paginationContainer\":\"Paginator_paginationContainer__BpoFf\",\"pagesContainer\":\"Paginator_pagesContainer__CKWwz\",\"paginationItem\":\"Paginator_paginationItem__OmEvg\",\"listPages\":\"Paginator_listPages__H+sEb\",\"selectedPage\":\"Paginator_selectedPage__EAkSf\",\"arrow\":\"Paginator_arrow__dhMZn\",\"dots\":\"Paginator_dots__Fiv75\"};","import {useMemo} from \"react\";\r\n\r\nexport const DOTS = '...';\r\n\r\ntype PaginationType = {\r\n    totalCount: number\r\n    pageSize: number\r\n    siblingCount: number\r\n    currentPage: number\r\n}\r\n\r\nconst range = (start: number, end: number) => {\r\n    let length = end - start + 1;\r\n    /*\r\n        Create an array of certain length and set the elements within it from\r\n      start value to end value.\r\n    */\r\n    return Array.from({length}, (_, idx) => idx + start);\r\n};\r\nexport const usePagination = (\r\n    {\r\n        totalCount,\r\n        pageSize,\r\n        siblingCount,\r\n        currentPage,\r\n    }: PaginationType) => {\r\n\r\n    return useMemo(() => {\r\n        const totalPageCount = Math.ceil(totalCount / pageSize);\r\n        // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\r\n        const totalPageNumbers = siblingCount + 5;\r\n        /*\r\n          Case 1:\r\n          If the number of pages is less than the page numbers we want to show in our\r\n          paginationComponent, we return the range [1..totalPageCount]\r\n        */\r\n        if (totalPageNumbers >= totalPageCount) {\r\n            return range(1, totalPageCount);\r\n        }\r\n\r\n        /*\r\n            Calculate left and right sibling index and make sure they are within range 1 and totalPageCount\r\n        */\r\n        const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n        const rightSiblingIndex = Math.min(\r\n            currentPage + siblingCount,\r\n            totalPageCount\r\n        );\r\n\r\n        /*\r\n          We do not show dots just when there is just one page number to be inserted between the extremes of sibling and the page limits i.e 1 and totalPageCount. Hence we are using leftSiblingIndex > 2 and rightSiblingIndex < totalPageCount - 2\r\n        */\r\n        const shouldShowLeftDots = leftSiblingIndex > 2;\r\n        const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n\r\n        const firstPageIndex = 1;\r\n        const lastPageIndex = totalPageCount;\r\n\r\n        /*\r\n            Case 2: No left dots to show, but rights dots to be shown\r\n        */\r\n        if (!shouldShowLeftDots && shouldShowRightDots) {\r\n            let leftItemCount = 3 + 2 * siblingCount;\r\n            let leftRange = range(1, leftItemCount);\r\n\r\n            return [...leftRange, DOTS, totalPageCount];\r\n        }\r\n\r\n        /*\r\n            Case 3: No right dots to show, but left dots to be shown\r\n        */\r\n        if (shouldShowLeftDots && !shouldShowRightDots) {\r\n\r\n            let rightItemCount = 3 + 2 * siblingCount;\r\n            let rightRange = range(\r\n                totalPageCount - rightItemCount + 1,\r\n                totalPageCount\r\n            );\r\n            return [firstPageIndex, DOTS, ...rightRange];\r\n        }\r\n\r\n        /*\r\n            Case 4: Both left and right dots to be shown\r\n        */\r\n        if (shouldShowLeftDots && shouldShowRightDots) {\r\n            let middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n            return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n        }\r\n    }, [totalCount, pageSize, siblingCount, currentPage]);\r\n};","import React from 'react';\r\nimport s from \"./Paginator.module.css\";\r\nimport {DOTS, usePagination} from \"./usePagination\";\r\nimport arrowLeftBlue from \"../../../icons/arrowLeftBlue.png\"\r\nimport arrowLeftGrey from \"../../../icons/arrowLeftGrey.png\"\r\nimport arrowRightBlue from \"../../../icons/arrowRightBlue.png\"\r\nimport arrowRightGrey from \"../../../icons/arrowRightGrey.png\"\r\nimport {v1} from 'uuid';\r\n\r\ntype PaginatorPropsType = {\r\n    currentPage: number\r\n    onPageChange: (currentPage: number | string) => void\r\n    totalCount: number\r\n    siblingCount: number\r\n    pageSize: number\r\n}\r\n\r\nexport const Paginator = React.memo((props: PaginatorPropsType) => {\r\n    const {\r\n        currentPage,\r\n        onPageChange,\r\n        totalCount,\r\n        siblingCount,\r\n        pageSize,\r\n    } = props\r\n\r\n    const paginationRange: any = usePagination({\r\n        currentPage,\r\n        totalCount,\r\n        siblingCount,\r\n        pageSize,\r\n    });\r\n\r\n    const onNext = () => {\r\n        onPageChange(currentPage + 1);\r\n    };\r\n    const onPrevious = () => {\r\n        onPageChange(currentPage - 1);\r\n    };\r\n\r\n    let lastPage = paginationRange[paginationRange.length - 1];\r\n    const finalPageStyle = (pageNumber: number | string) => {\r\n        return `${s.paginationItem} ${currentPage === pageNumber && s.selectedPage}`\r\n    }\r\n    const finalListPagesStyle = `${s.paginationItem}  ${s.listPages}`\r\n    const finalDotsStyle = `${s.paginationItem}  ${s.dots}`\r\n    const range = pageSize * currentPage\r\n    const finalListPages = totalCount === 1\r\n        ? `${totalCount} of ${totalCount} user`\r\n        : `${range - (pageSize - 1)}-${totalCount > 4\r\n            ? range > totalCount ? totalCount : range\r\n            : totalCount} \r\n        of ${totalCount} users`\r\n\r\n    return (\r\n        <div className={s.paginationContainer}>\r\n            <div className={finalListPagesStyle}>\r\n                {finalListPages}\r\n            </div>\r\n            <div className={s.pagesContainer}>\r\n                <div className={s.paginationItem}>\r\n                    {currentPage === 1\r\n                        ? <img src={arrowLeftGrey} alt=\"prev\" className={s.arrow}/>\r\n                        : <img src={arrowLeftBlue} alt=\"prev\" onClick={onPrevious} className={s.arrow}/>}\r\n                </div>\r\n                {paginationRange.map((pageNumber: number | string, i: number) => {\r\n                    if (pageNumber === DOTS) {\r\n                        return <span key={v1()} className={finalDotsStyle}>{DOTS}</span>;\r\n                    }\r\n                    return (\r\n                        <span key={paginationRange[i]}\r\n                              className={finalPageStyle(pageNumber)}\r\n                              onClick={() => onPageChange(pageNumber)}\r\n                        >\r\n                        {pageNumber}\r\n                    </span>\r\n                    );\r\n                })}\r\n                <div className={s.paginationItem}>\r\n                    {currentPage === lastPage\r\n                        ? <img src={arrowRightGrey} alt=\"next\" className={s.arrow}/>\r\n                        : <img src={arrowRightBlue} alt=\"next\" onClick={onNext} className={s.arrow}/>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});","// extracted by mini-css-extract-plugin\nexport default {\"userWrapper\":\"User_userWrapper__l2dfP\",\"imgWrapper\":\"User_imgWrapper__wTkDC\",\"photo\":\"User_photo__Uq6Rv\",\"buttonWrapper\":\"User_buttonWrapper__sCDt-\",\"informationWrapper\":\"User_informationWrapper__hhM91\",\"name\":\"User_name__tSzv9\",\"message\":\"User_message__D19KN\",\"locationWrapper\":\"User_locationWrapper__b5bTP\",\"location\":\"User_location__ut4Gn\"};","import React, {FC} from 'react';\r\nimport s from './User.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport avatar from '../../../icons/avatar.jpg';\r\nimport {UserType} from '../../../redux/usersReducer';\r\n\r\ntype UsersType = {\r\n    user: UserType\r\n    followingInProgress: Array<number>\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\n\r\nexport const User: FC<UsersType> = (\r\n    {\r\n        user,\r\n        followingInProgress,\r\n        follow,\r\n        unfollow,\r\n    }) => {\r\n\r\n    return (\r\n        <div key={user.id} className={s.userWrapper}>\r\n            <div className={s.imgWrapper}>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img className={s.photo}\r\n                             src={user.photos.small !== null ? user.photos.small : avatar}\r\n                             alt=\"photo\"/>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={s.buttonWrapper}>\r\n                    {user.followed ?\r\n                        <button\r\n                            disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => {\r\n                                unfollow(user.id);\r\n                            }}>Unfollow</button>\r\n                        :\r\n                        <button\r\n                            disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => {\r\n                                follow(user.id);\r\n                            }}>Follow</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={s.informationWrapper}>\r\n                <div className={s.message}>\r\n                    <div className={s.name}>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </div>\r\n                <div className={s.locationWrapper}>\r\n                    <div className={s.location}>{'u.location.country'},</div>\r\n                    <div className={s.location}>{'u.location.city'}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, { FC } from 'react';\r\nimport s from './Users.module.css';\r\nimport {UserType} from '../../redux/usersReducer';\r\nimport {Paginator} from './Paginator/Paginator';\r\nimport {User} from './User/User';\r\n\r\ntype UsersType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n    siblingCount: number\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    onPageChanged: (currentPage: number | string) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n}\r\n\r\nexport const Users: FC<UsersType> = (\r\n    {\r\n        totalUsersCount,\r\n        pageSize,\r\n        currentPage,\r\n        users,\r\n        followingInProgress,\r\n        siblingCount,\r\n        follow,\r\n        unfollow,\r\n        onPageChanged,\r\n    }) => {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                users.map(u =>\r\n                    <User key={u.id}\r\n                          user={u}\r\n                          followingInProgress={followingInProgress}\r\n                          follow={follow}\r\n                          unfollow={unfollow}/>)\r\n            }\r\n            <div className={s.paginator}>\r\n                <Paginator\r\n                    currentPage={currentPage}\r\n                    onPageChange={onPageChanged}\r\n                    totalCount={totalUsersCount}\r\n                    pageSize={pageSize}\r\n                    siblingCount={siblingCount}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import {AppStateType} from \"./reduxStore\";\r\nimport {createSelector} from \"reselect\";\r\nimport {UserType} from \"./usersReducer\";\r\n\r\nconst getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers = createSelector(getUsersSelector, (users: UserType[]) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\nexport const getSiblingCount = (state: AppStateType) => {\r\n    return state.usersPage.siblingCount\r\n}\r\n","import React, {ComponentType} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/reduxStore';\r\nimport {\r\n    follow,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollow,\r\n    UserType,\r\n} from \"../../redux/usersReducer\";\r\nimport {Users} from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize, getSiblingCount,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n} from '../../redux/usersSelectors';\r\n\r\ntype MapStatePropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n    siblingCount: number\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setCurrentPage: (currentPage: number | string) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n    requestUsers: (currentPage: number | string, pageSize: number) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType, {}> {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n    onPageChanged = (pageNumber: number | string) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ?\r\n                <div style={{padding: '10px', backgroundColor: 'opacity'}}><Preloader/></div> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                users={this.props.users}\r\n                followingInProgress={this.props.followingInProgress}\r\n                siblingCount={this.props.siblingCount}\r\n                onPageChanged={this.onPageChanged}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        siblingCount: getSiblingCount(state),\r\n    }\r\n}\r\nexport default compose<ComponentType>(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers,}),\r\n    )(UsersContainer)\r\n\r\n","import {Navigate} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {AppStateType} from \"../redux/reduxStore\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype mapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: mapStatePropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Navigate to=\"/login\"/>\r\n            return <Component {...restProps as T}/>\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n"],"names":["DOTS","range","start","end","length","Array","from","_","idx","usePagination","totalCount","pageSize","siblingCount","currentPage","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","Paginator","React","props","onPageChange","paginationRange","lastPage","finalPageStyle","pageNumber","s","finalListPagesStyle","finalDotsStyle","finalListPages","className","src","arrowLeftGrey","alt","arrowLeftBlue","onClick","map","i","v1","arrowRightGrey","arrowRightBlue","User","user","followingInProgress","follow","unfollow","to","id","photos","small","avatar","followed","disabled","some","name","status","Users","totalUsersCount","users","onPageChanged","u","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getUsers","state","usersPage","filter","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","getSiblingCount","UsersContainer","requestUsers","this","style","padding","backgroundColor","Preloader","toggleFollowingProgress","compose","withAuthRedirect","connect","setCurrentPage","mapStateToProps","isAuth","auth","Component","restProps"],"sourceRoot":""}